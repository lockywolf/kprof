<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook V3.1//EN" [
	<!-- DOCTYPE book PUBLIC  "-//KDE//DTD DocBook V4.1-Based Variant V1.0//EN" [ -->
  <!ENTITY kprof "<application>KProf</application>">
  <!ENTITY % addindex "IGNORE">
  <!ENTITY % English "INCLUDE" -- change language only here -->
  <!ENTITY % ents PUBLIC "-//KDE//ENTITIES Documentation V2.0//EN">
  %ents;
  <!-- Do not define any other entities; instead, use the entities
       from kde-genent.entities and <lg>/user.entities. -->
]>

<book lang="&language;">
<bookinfo>
	<title>The KProf Handbook</title>
	<authorgroup>
		<author>
			<firstname>Florent</firstname>
			<surname>Pillet</surname>
			<affiliation>
				<address><email>fpillet@users.sourceforge.net</email></address>
			</affiliation>
		</author>
	</authorgroup>
	<copyright>
		<year>2000</year>
		<year>2001</year>
		<holder>Florent Pillet</holder>
	</copyright>
	<legalnotice>&FDLNotice;</legalnotice>
	<!-- Date and version information of the documentation -->
	<date>31/01/2001</date>
	<releaseinfo>1.1</releaseinfo>

	<!-- Abstract about this handbook -->
	<abstract>
		<para>
			&kprof; is a visual tool helping developers to analyze the profiling results generated by gprof(1).
		</para>
	</abstract>

	<!-- This is a set of Keywords for indexing by search engines. -->
	<keywordset>
		<keyword>KDE</keyword>
		<keyword>KProf</keyword>
		<keyword>Development</keyword>
		<keyword>profile</keyword>
		<keyword>gprof</keyword>
		<keyword>profiling</keyword>
	</keywordset>
	&kde-modespec;
</bookinfo>

<!-- The contents of the documentation begin here. -->

<chapter id="introduction">
	<title>Introduction</title>
	<para>
		&kprof; is a visual tool  for developers that displays the execution profiling
		output generated by gprof(1) and other profilers. The output of profilers being usually difficult to read
		(beyond the flat profile information), KProf presents the information in list-
		or tree-views that make the execution profiling information very easy to understand. 
	</para>
	<para>
		KProf provides access to the following features:
		<itemizedlist>
			<listitem><para>Flat profile view displays all function / methods and their profiling information</para></listitem>
			<listitem><para>Hierarchical profile view displays a tree for each function / method with the other functions / methods it calls as subelements.</para></listitem>
			<listitem><para>Object profile view, for C++ developers, groups the methods in a tree view by object name.</para></listitem>
			<listitem><para>Recursive functions carry a special icon to clearly show that they are recursive.</para></listitem>
			<listitem><para>Right-clicking a function or method displays a pop-up with the list of callers and called functions. You can directly go to one of these functions by selecting it in the pop-up menu.</para></listitem>
			<listitem><para>The flat profile view provides an additional filter edit box to filter the display and show only the functions or methods containing the text that you enter.</para></listitem>
		</itemizedlist>
	</para>
	<para>
	KProf is distributed under the GPL license and is available in source code form, for free.
	</para>
</chapter>

<chapter id="introduction-to-profiling">
	<title>Introduction To Profiling</title>
	<para>
	  A code profiler is a tool that developers use to determine where their code spends its time,
	  and where it should be optimized.
	</para>
	<para>
	  Once your software is developed, you often want to speed
	  up parts of your code to improve the general speed of your application. For that matter,
	  you need to know what parts of your program are causing the bottlenecks. Common wisdom
	  says that 90% of an application's time is spent in 10% of the code. While not always true,
	  this is the reality of a lot of programs and something you are probably aware of if you
	  are reading this manual.
	</para>
	<para>
	  To get started with profiling, you need to understand what a code profiler can do for you
	  and why you should use one. A code profiler produces information about the time spent during
	  execution in the various parts of your code. It typically gives you the number of times a
	  routine is called, who called it and which routines it did in turn call. In addition to the
	  number of times the routine was executed, the profiler indicates how much time was spent in
	  the routine itself and how much total time was spent in the routine and in the subroutines
	  it called.
	</para>
</chapter>

<chapter id="available-profilers">
	<para>
	  The most widely available profiler on Unix platforms is gprof, the GNU profiler. A respectable
	  and long-available tool, gprof may not be enough for you if your are trying to do very fine
	  tuning of a complex program with lots of small routines. This is because the time measurements
	  given by gprof are statistical, which means that it only gives you an sampling of the time
	  spent in the various parts of your programs, not a real and accurate view, especially if your
	  program runs for a very short period of time.
	</para>
	<para>
	  A new profiler recently appeared on Linux. It is called Function Check and is available
	  <ulink url="http://www710.univ-lyon1.fr/~yperret/fnccheck/profiler.html">here</ulink>. This profiler
	  brings numerous improvement over its ancestor. Instead of producing statistical results, it generates
	  real measurements of the time spent in routines. For that matter, it uses a technic known as 
	  function instrumentation. Briefly, you compile your code with a special switch (specific to GCC,
	  so you'll have to use gcc 2.95 or later) which adds calls to the profiler on entry and exit of
	  every function. Then at link time, you link with the Function Check library. After executing your
	  application, a file named "fnccheck.out" is produced and contains the profiling results.
	</para>
	<para>
	  Finally, KProf supports profiling for Palm OS applications executed in POSE, the Palm OS
	  Emulator. If you use Unix to develop applications for Palm OS, you can take advantage of
	  KProf to examine profiling results generated by POSE.
	</para>
	<para>
	  Links:
	  <itemizedlist>
		<listitem><para><ulink url="http://www.gnu.org/software/binutils/binutils.html">GNU gprof</ulink> (part of the binutils package)</para></listitem>
		<listitem><para><ulink url="http://sourceforge.net/projects/fnccheck">Function Check</ulink> - a better profiler for Unix platforms</para></listitem>
		<listitem><para><ulink url="http://www.palmos.com/dev/tech/tools/emulator">Palm OS Emulator</ulink> - an emulator for Palm OS applications which can also generate profiling information</para></listitem>
	  </itemizedlist>
	</para>
</chapter>

<!-- COMMAND REFERENCE -->
<chapter id="commands">
<title>Command Reference</title>

<sect1 id="kprof-mainwindow">
<title>The main KProf window</title>

<para>
</para>

<sect2>
<title>The File Menu</title>
<para>
	<variablelist>
		<varlistentry>
			<term>
				<menuchoice>
					<shortcut><keycombo><keycap>Ctrl</keycap><keycap>o</keycap></keycombo></shortcut>
					<guimenu>File</guimenu>
					<guimenuitem>Open</guimenuitem>
				</menuchoice>
			</term>
			<listitem>
				<para>
					<action>Opens a profile results file</action>
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<menuchoice>
					<shortcut><keycombo><keycap>Ctrl</keycap><keycap>r</keycap></keycombo></shortcut>
					<guimenu>File</guimenu>
					<guimenuitem>Open Recent</guimenuitem>
				</menuchoice></term>
			<listitem>
				<para>
					<action>Accesses a recently opened document</action>
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<menuchoice>
					<shortcut><keycombo><keycap>Ctrl</keycap><keycap>q</keycap></keycombo></shortcut>
					<guimenu>File</guimenu>
					<guimenuitem>Quit</guimenuitem>
				</menuchoice>
			</term>
			<listitem>
				<para>
					<action>Quits</action> &kprof;
				</para>
			</listitem>
		</varlistentry>
	</variablelist>
</para>
</sect2>

<sect2>
<title>The Tools Menu</title>
<para>
	<variablelist>
		<varlistentry>
			<term>
				<menuchoice>
					<shortcut><keycombo><keycap>Ctrl</keycap><keycap>g</keycap></keycombo></shortcut>
					<guimenu>Tools</guimenu>
					<guimenuitem>Generate Call Graph</guimenuitem>
				</menuchoice>
			</term>
			<listitem>
				<para>
					<action>Opens the call-graph output dialog</action>
				</para>
			</listitem>
		</varlistentry>
	</variablelist>
</para>
</sect2>

<sect2>
<title>The Settings Menu</title>
<para>
	<variablelist>
		<varlistentry>
			<term>
				<menuchoice>
					<shortcut><keycombo><keycap>Ctrl</keycap><keycap>t</keycap></keycombo></shortcut>
					<guimenu>Settings</guimenu>
					<guimenuitem>Show Toolbar</guimenuitem>
				</menuchoice>
			</term>
			<listitem>
				<para>
					<action>Show/Hide the toolbar</action>
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<menuchoice>
					<shortcut><keycombo><keycap>Ctrl</keycap><keycap>b</keycap></keycombo></shortcut>
					<guimenu>Settings</guimenu>
					<guimenuitem>Abbreviate C++ templates</guimenuitem>
				</menuchoice>
			</term>
			<listitem>
				<para>
					<action>Turn C++ template abbreviation ON or OFF. If enabled, C++ template names are shortened</action>	
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<menuchoice>
					<shortcut><keycombo><keycap>Ctrl</keycap><keycap>t</keycap></keycombo></shortcut>
					<guimenu>Settings</guimenu>
					<guimenuitem>Select Font</guimenuitem>
				</menuchoice>
			</term>
			<listitem>
				<para>
					<action>Opens the font selection dialog to select the font used to display profile entries</action>
				</para>
			</listitem>
		</varlistentry>
	</variablelist>
</para>
</sect2>


</sect1>
</chapter>


<!-- FAQ -->
<chapter id="faq">
<title>Questions and Answers</title>

<qandaset id="faqlist">
	<qandaentry>
		<question>
			<para>My Mouse doesn't work. How do I quit &kprof;?</para>
		</question>
		<answer>
			<para>You silly goose! Check out the <link linkend="commands">Commands
			Section</link> for the answer.</para>
		</answer>
	</qandaentry>
</qandaset>
</chapter>


<!-- CREDITS AND LICENSE -->

<chapter id="credits">
<title>Credits and License</title>
<para>
	&kprof;
</para>
<para>
	Program copyright 2000-2001 Florent Pillet <email>fpillet@users.sourceforge.net</email>
</para>
<para>
	Contributors:
	<itemizedlist>
		<listitem><para>Bernd Gehrman <email>bernd@physik.hu-berlin.de</email></para></listitem>
		<listitem><para>Carsten Branitzki <email>csb@operamail.com</email></para></listitem>
	</itemizedlist>
</para>

<para>
	Documentation copyright 2001 Florent Pillet <email>fpillet@users.sourceforge.net</email>
</para>

&underFDL;	<!-- FDL: do not remove -->
&underGPL;	<!-- GPL License -->

</chapter>

<appendix id="installation">
<title>Installation</title>

<sect1 id="getting-kprof">
<title>How to obtain KProf</title>
<para>
The KProf homepage is located at
<ulink url="http://kprof.sourceforge.net/">http://kprof.sourceforge.net</ulink>.
From this page, you can download the source code for the latest release of KProf.
</para>
<para>
If you want to contribute, you can also download the up-to-date source code from
the KProf CVS. The KProf project summary page at
<ulink url="http://sourceforge.net">SourceForge</ulink> is located at
<ulink url="http://sourceforge.net/projects/kprof">http://sourceforge.net/projects/kprof</ulink>.
From this page, you'll find links to browser the CVS repository using a web browser, and
instructions for getting the up-to-date sources via CVS.
</para>
</sect1>

<sect1 id="requirements">
<title>Requirements</title>
<para>
KProf is a KDE 2 application. In order to use it, you need the KDE Libraries available for
free from the <ulink url="http://www.kde.org/">KDE Web Site</ulink>.
</para>
</sect1>

<sect1 id="compilation">
<title>Compilation and installation</title>

<para>
In order to compile and install KProf on your system, type the following in the base
directory of the distribution:
<screen width="40">
<prompt>%</prompt> <userinput>./configure</userinput>
<prompt>%</prompt> <userinput>make</userinput>
<prompt>%</prompt> <userinput>su - root</userinput>
<prompt>%</prompt> <userinput>make install</userinput>
</screen>
</para>

<para>
Since KProf uses autoconf and automake you should have not trouble compiling it.
Should you run into problems please report them to the 
<ulink url="http://sourceforge.net/bugs/?group_id=10250">KProf project page</ulink>.
</para>

</sect1>

</appendix>

&documentation.index;
</book>
<!--
Local Variables:
mode: sgml
sgml-minimize-attributes: nil
sgml-general-insert-case: lower
End:
-->
